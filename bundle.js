require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Path = require('./path'),
    O = require('./ops');

module.exports = (function () {
  var reflect;
  reflect = function (p, q) {
    return O.minus(O.times(2, p), q);
  };
  return function (arg) {
    var c0, c1, control_points, diffs, i, j, k, l, m, p0, p1, path, points, ref, ref1, ref2, ref3, results, tension;
    points = arg.points, tension = arg.tension;
    if (tension == null) {
      tension = 0.3;
    }
    diffs = [];
    l = points.length;
    for (i = j = 1, ref = l - 1; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
      diffs.push(O.times(tension, O.minus(points[i], points[i - 1])));
    }
    control_points = [O.plus(points[0], reflect(diffs[0], diffs[1]))];
    for (i = k = 1, ref1 = l - 2; 1 <= ref1 ? k <= ref1 : k >= ref1; i = 1 <= ref1 ? ++k : --k) {
      control_points.push(O.minus(points[i], O.average([
        diffs[i],
        diffs[i - 1]
      ])));
    }
    control_points.push(O.minus(points[l - 1], reflect(diffs[l - 2], diffs[l - 3])));
    c0 = control_points[0];
    c1 = control_points[1];
    p0 = points[0];
    p1 = points[1];
    path = (ref2 = Path()).moveto.apply(ref2, p0).curveto(c0[0], c0[1], c1[0], c1[1], p1[0], p1[1]);
    return {
      path: function () {
        results = [];
        for (var m = 2, ref3 = l - 1; 2 <= ref3 ? m <= ref3 : m >= ref3; 2 <= ref3 ? m++ : m--) {
          results.push(m);
        }
        return results;
      }.apply(this).reduce(function (pt, i) {
        var c, p;
        c = control_points[i];
        p = points[i];
        return pt.smoothcurveto(c[0], c[1], p[0], p[1]);
      }, path),
      centroid: O.average(points)
    };
  };
}).call(this);


}).call(this)
},{"./ops":5,"./path":6}],2:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Path = require('./path'),
    O = require('./ops');

module.exports = (function () {
  return function (arg) {
    var a, b, c, d, end, length, mid1, mid2, ref, ref1, ref2, start, tension;
    start = arg.start, end = arg.end, tension = arg.tension;
    if (tension == null) {
      tension = 0.05;
    }
    a = start[0], b = start[1];
    c = end[0], d = end[1];
    length = (c - a) * tension;
    mid1 = [
      a + length,
      b
    ];
    mid2 = [
      c - length,
      d
    ];
    return {
      path: (ref = (ref1 = (ref2 = Path()).moveto.apply(ref2, start)).lineto.apply(ref1, mid1).curveto(a + 5 * length, b, c - 5 * length, d, c - length, d)).lineto.apply(ref, end),
      centroid: O.average([
        start,
        end
      ])
    };
  };
}).call(this);


}).call(this)
},{"./ops":5,"./path":6}],3:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Linear = require('./linear'),
    O = require('./ops');

module.exports = (function () {
  var box, epsilon;
  epsilon = 0.00001;
  box = function (datum, accessor) {
    var item, l, points, sorted, xmax, xmin, ycoords, ymax, ymin;
    points = function () {
      var j, len, results;
      results = [];
      for (j = 0, len = datum.length; j < len; j++) {
        item = datum[j];
        results.push(accessor(item));
      }
      return results;
    }();
    sorted = points.sort(function (arg, arg1) {
      var a, b, c, d;
      a = arg[0], b = arg[1];
      c = arg1[0], d = arg1[1];
      return a - c;
    });
    ycoords = sorted.map(function (p) {
      return p[1];
    });
    l = sorted.length;
    xmin = sorted[0][0];
    xmax = sorted[l - 1][0];
    ymin = O.min(ycoords);
    ymax = O.max(ycoords);
    if (xmin === xmax) {
      xmax += epsilon;
    }
    if (ymin === ymax) {
      ymax += epsilon;
    }
    return {
      points: sorted,
      xmin: xmin,
      xmax: xmax,
      ymin: ymin,
      ymax: ymax
    };
  };
  return function (arg) {
    var arranged, base, closed, data, datum, f, height, scale, width, xaccessor, xmax, xmin, xscale, yaccessor, ymax, ymin, yscale;
    data = arg.data, xaccessor = arg.xaccessor, yaccessor = arg.yaccessor, width = arg.width, height = arg.height, closed = arg.closed;
    if (xaccessor == null) {
      xaccessor = function (arg1) {
        var x, y;
        x = arg1[0], y = arg1[1];
        return x;
      };
    }
    if (yaccessor == null) {
      yaccessor = function (arg1) {
        var x, y;
        x = arg1[0], y = arg1[1];
        return y;
      };
    }
    f = function (i) {
      return [
        xaccessor(i),
        yaccessor(i)
      ];
    };
    arranged = function () {
      var j, len, results;
      results = [];
      for (j = 0, len = data.length; j < len; j++) {
        datum = data[j];
        results.push(box(datum, f));
      }
      return results;
    }();
    xmin = O.min(arranged.map(function (d) {
      return d.xmin;
    }));
    xmax = O.max(arranged.map(function (d) {
      return d.xmax;
    }));
    ymin = O.min(arranged.map(function (d) {
      return d.ymin;
    }));
    ymax = O.max(arranged.map(function (d) {
      return d.ymax;
    }));
    if (closed) {
      ymin = Math.min(ymin, 0);
      ymax = Math.max(ymax, 0);
    }
    base = closed ? 0 : ymin;
    xscale = Linear([
      xmin,
      xmax
    ], [
      0,
      width
    ]);
    yscale = Linear([
      ymin,
      ymax
    ], [
      height,
      0
    ]);
    scale = function (arg1) {
      var x, y;
      x = arg1[0], y = arg1[1];
      return [
        xscale(x),
        yscale(y)
      ];
    };
    return {
      arranged: arranged,
      scale: scale,
      xscale: xscale,
      yscale: yscale,
      base: base
    };
  };
}).call(this);


}).call(this)
},{"./linear":4,"./ops":5}],4:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;


module.exports = (function () {
  var linear;
  linear = function (arg, arg1) {
    var a, b, c, d, f;
    a = arg[0], b = arg[1];
    c = arg1[0], d = arg1[1];
    f = function (x) {
      return c + (d - c) * (x - a) / (b - a);
    };
    f.inverse = function () {
      return linear([
        c,
        d
      ], [
        a,
        b
      ]);
    };
    return f;
  };
  return linear;
}).call(this);


}).call(this)
},{}],5:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;


module.exports = (function () {
  var average, enhance, length, max, min, minus, on_circle, plus, sum, sum_vectors, times;
  sum = function (xs) {
    return xs.reduce(function (a, b) {
      return a + b;
    }, 0);
  };
  min = function (xs) {
    return xs.reduce(function (a, b) {
      return Math.min(a, b);
    });
  };
  max = function (xs) {
    return xs.reduce(function (a, b) {
      return Math.max(a, b);
    });
  };
  plus = function (arg, arg1) {
    var a, b, c, d;
    a = arg[0], b = arg[1];
    c = arg1[0], d = arg1[1];
    return [
      a + c,
      b + d
    ];
  };
  minus = function (arg, arg1) {
    var a, b, c, d;
    a = arg[0], b = arg[1];
    c = arg1[0], d = arg1[1];
    return [
      a - c,
      b - d
    ];
  };
  times = function (k, arg) {
    var a, b;
    a = arg[0], b = arg[1];
    return [
      k * a,
      k * b
    ];
  };
  length = function (arg) {
    var a, b;
    a = arg[0], b = arg[1];
    return Math.sqrt(a * a + b * b);
  };
  sum_vectors = function (xs) {
    return xs.reduce(function (v, w) {
      return plus(v, w);
    }, [
      0,
      0
    ]);
  };
  average = function (points) {
    return times(1 / points.length, points.reduce(plus));
  };
  on_circle = function (r, angle) {
    return times(r, [
      Math.sin(angle),
      -Math.cos(angle)
    ]);
  };
  enhance = function (compute, curve) {
    var key, method, ref;
    ref = compute || {};
    for (key in ref) {
      method = ref[key];
      curve[key] = method(curve.index, curve.item, curve.group);
    }
    return curve;
  };
  return {
    sum: sum,
    min: min,
    max: max,
    plus: plus,
    minus: minus,
    times: times,
    length: length,
    sum_vectors: sum_vectors,
    average: average,
    on_circle: on_circle,
    enhance: enhance
  };
}).call(this);


}).call(this)
},{}],6:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;


module.exports = (function () {
  var Path;
  Path = function (init) {
    var areEqualPoints, instructions, plus, point, printInstrunction, push, round, trimZeros, verbosify;
    instructions = init || [];
    push = function (arr, el) {
      var copy;
      copy = arr.slice(0, arr.length);
      copy.push(el);
      return copy;
    };
    areEqualPoints = function (p1, p2) {
      return p1[0] === p2[0] && p1[1] === p2[1];
    };
    trimZeros = function (string, char) {
      var l;
      l = string.length;
      while (string.charAt(l - 1) === "0") {
        l -= 1;
      }
      if (string.charAt(l - 1) === ".") {
        l -= 1;
      }
      return string.substr(0, l);
    };
    round = function (number, digits) {
      var str;
      str = number.toFixed(digits);
      return trimZeros(str);
    };
    printInstrunction = function (arg) {
      var command, numbers, param, params;
      command = arg.command, params = arg.params;
      numbers = function () {
        var i, len, results;
        results = [];
        for (i = 0, len = params.length; i < len; i++) {
          param = params[i];
          results.push(round(param, 6));
        }
        return results;
      }();
      return command + " " + numbers.join(" ");
    };
    point = function (arg, arg1) {
      var command, params, prev_x, prev_y;
      command = arg.command, params = arg.params;
      prev_x = arg1[0], prev_y = arg1[1];
      switch (command) {
      case "M":
        return [
          params[0],
          params[1]
        ];
      case "L":
        return [
          params[0],
          params[1]
        ];
      case "H":
        return [
          params[0],
          prev_y
        ];
      case "V":
        return [
          prev_x,
          params[0]
        ];
      case "Z":
        return null;
      case "C":
        return [
          params[4],
          params[5]
        ];
      case "S":
        return [
          params[2],
          params[3]
        ];
      case "Q":
        return [
          params[2],
          params[3]
        ];
      case "T":
        return [
          params[0],
          params[1]
        ];
      case "A":
        return [
          params[5],
          params[6]
        ];
      }
    };
    verbosify = function (keys, f) {
      return function (a) {
        var args;
        args = typeof a === "object" ? keys.map(function (k) {
          return a[k];
        }) : arguments;
        return f.apply(null, args);
      };
    };
    plus = function (instruction) {
      return Path(push(instructions, instruction));
    };
    return {
      moveto: verbosify([
        "x",
        "y"
      ], function (x, y) {
        return plus({
          command: "M",
          params: [
            x,
            y
          ]
        });
      }),
      lineto: verbosify([
        "x",
        "y"
      ], function (x, y) {
        return plus({
          command: "L",
          params: [
            x,
            y
          ]
        });
      }),
      hlineto: verbosify(["x"], function (x) {
        return plus({
          command: "H",
          params: [x]
        });
      }),
      vlineto: verbosify(["y"], function (y) {
        return plus({
          command: "V",
          params: [y]
        });
      }),
      closepath: function () {
        return plus({
          command: "Z",
          params: []
        });
      },
      curveto: verbosify([
        "x1",
        "y1",
        "x2",
        "y2",
        "x",
        "y"
      ], function (x1, y1, x2, y2, x, y) {
        return plus({
          command: "C",
          params: [
            x1,
            y1,
            x2,
            y2,
            x,
            y
          ]
        });
      }),
      smoothcurveto: verbosify([
        "x2",
        "y2",
        "x",
        "y"
      ], function (x2, y2, x, y) {
        return plus({
          command: "S",
          params: [
            x2,
            y2,
            x,
            y
          ]
        });
      }),
      qcurveto: verbosify([
        "x1",
        "y1",
        "x",
        "y"
      ], function (x1, y1, x, y) {
        return plus({
          command: "Q",
          params: [
            x1,
            y1,
            x,
            y
          ]
        });
      }),
      smoothqcurveto: verbosify([
        "x",
        "y"
      ], function (x, y) {
        return plus({
          command: "T",
          params: [
            x,
            y
          ]
        });
      }),
      arc: verbosify([
        "rx",
        "ry",
        "xrot",
        "large_arc_flag",
        "sweep_flag",
        "x",
        "y"
      ], function (rx, ry, xrot, large_arc_flag, sweep_flag, x, y) {
        return plus({
          command: "A",
          params: [
            rx,
            ry,
            xrot,
            large_arc_flag,
            sweep_flag,
            x,
            y
          ]
        });
      }),
      print: function () {
        return instructions.map(printInstrunction).join(" ");
      },
      points: function () {
        var fn, i, instruction, len, prev, ps;
        ps = [];
        prev = [
          0,
          0
        ];
        fn = function () {
          var p;
          p = point(instruction, prev);
          prev = p;
          if (p) {
            return ps.push(p);
          }
        };
        for (i = 0, len = instructions.length; i < len; i++) {
          instruction = instructions[i];
          fn();
        }
        return ps;
      },
      instructions: function () {
        return instructions.slice(0, instructions.length);
      },
      connect: function (path) {
        var first, last, newInstructions;
        last = this.points().slice(-1)[0];
        first = path.points()[0];
        newInstructions = path.instructions().slice(1);
        if (!areEqualPoints(last, first)) {
          newInstructions.unshift({
            command: "L",
            params: first
          });
        }
        return Path(this.instructions().concat(newInstructions));
      }
    };
  };
  return function () {
    return Path();
  };
}).call(this);


}).call(this)
},{}],7:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Linear = require('./linear'),
    O = require('./ops'),
    Sector = require('./sector');

module.exports = (function () {
  return function (arg) {
    var R, accessor, center, compute, curves, data, i, item, j, len, r, s, scale, t, value, values;
    data = arg.data, accessor = arg.accessor, center = arg.center, r = arg.r, R = arg.R, compute = arg.compute;
    values = function () {
      var j, len, results;
      results = [];
      for (j = 0, len = data.length; j < len; j++) {
        item = data[j];
        results.push(accessor(item));
      }
      return results;
    }();
    s = O.sum(values);
    scale = Linear([
      0,
      s
    ], [
      0,
      2 * Math.PI
    ]);
    curves = [];
    t = 0;
    for (i = j = 0, len = data.length; j < len; i = ++j) {
      item = data[i];
      value = values[i];
      curves.push(O.enhance(compute, {
        item: item,
        index: i,
        sector: Sector({
          center: center,
          r: r,
          R: R,
          start: scale(t),
          end: scale(t + value)
        })
      }));
      t += value;
    }
    return { curves: curves };
  };
}).call(this);


}).call(this)
},{"./linear":4,"./ops":5,"./sector":10}],8:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Path = require('./path'),
    O = require('./ops');

module.exports = (function () {
  return function (arg) {
    var closed, head, l, path, points, ref, tail;
    points = arg.points, closed = arg.closed;
    l = points.length;
    head = points[0];
    tail = points.slice(1, +l + 1 || 9000000000);
    path = tail.reduce(function (pt, p) {
      return pt.lineto.apply(pt, p);
    }, (ref = Path()).moveto.apply(ref, head));
    return {
      path: closed ? path.closepath() : path,
      centroid: O.average(points)
    };
  };
}).call(this);


}).call(this)
},{"./ops":5,"./path":6}],9:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var SemiRegularPolygon = require('./semi-regular-polygon'),
    O = require('./ops');

module.exports = (function () {
  var collect_keys, global_max, key_accessor;
  collect_keys = function (objects) {
    var j, key, keys, keysets, l, len, len1, o, object, ref;
    keys = [];
    keysets = function () {
      var j, len, results;
      results = [];
      for (j = 0, len = objects.length; j < len; j++) {
        o = objects[j];
        results.push(Object.keys(o));
      }
      return results;
    }();
    for (j = 0, len = objects.length; j < len; j++) {
      object = objects[j];
      ref = Object.keys(object);
      for (l = 0, len1 = ref.length; l < len1; l++) {
        key = ref[l];
        if (keys.indexOf(key) === -1) {
          keys.push(key);
        }
      }
    }
    return keys;
  };
  key_accessor = function (keys) {
    var a, fn, j, key, len;
    a = {};
    fn = function (k) {
      return a[k] = function (o) {
        return o[k];
      };
    };
    for (j = 0, len = keys.length; j < len; j++) {
      key = keys[j];
      fn(key);
    }
    return a;
  };
  global_max = function (data, accessor) {
    var keys, maxs;
    keys = Object.keys(accessor);
    maxs = data.map(function (d) {
      var vals;
      vals = keys.map(function (k) {
        return accessor[k](d);
      });
      return O.max(vals);
    });
    return O.max(maxs);
  };
  return function (arg) {
    var accessor, angle, center, compute, data, i, j, keys, max, polygons, r, results, ring_paths, rings, sides;
    data = arg.data, accessor = arg.accessor, center = arg.center, r = arg.r, max = arg.max, rings = arg.rings, compute = arg.compute;
    if (rings == null) {
      rings = 3;
    }
    if (accessor == null) {
      accessor = key_accessor(collect_keys(data));
    }
    keys = Object.keys(accessor);
    sides = keys.length;
    angle = 2 * Math.PI / sides;
    i = -1;
    if (max == null) {
      max = global_max(data, accessor);
    }
    ring_paths = function () {
      results = [];
      for (var j = 1; 1 <= rings ? j <= rings : j >= rings; 1 <= rings ? j++ : j--) {
        results.push(j);
      }
      return results;
    }.apply(this).map(function (n) {
      var j, radius, ref, results;
      radius = r * n / rings;
      return SemiRegularPolygon({
        center: center,
        radii: function () {
          results = [];
          for (var j = 0, ref = sides - 1; 0 <= ref ? j <= ref : j >= ref; 0 <= ref ? j++ : j--) {
            results.push(j);
          }
          return results;
        }.apply(this).map(function (s) {
          return radius;
        })
      });
    });
    polygons = data.map(function (d) {
      i += 1;
      return O.enhance(compute, {
        polygon: SemiRegularPolygon({
          center: center,
          radii: keys.map(function (k) {
            return r * accessor[k](d) / max;
          })
        }),
        item: d,
        index: i
      });
    });
    return {
      curves: polygons,
      rings: ring_paths
    };
  };
}).call(this);


}).call(this)
},{"./ops":5,"./semi-regular-polygon":11}],10:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var slice = [].slice;

var Path = require('./path'),
    O = require('./ops');

module.exports = (function () {
  return function (arg) {
    var R, a, b, c, center, centroid, d, end, large, mid_angle, mid_radius, path, r, ref, ref1, ref2, ref3, start;
    center = arg.center, r = arg.r, R = arg.R, start = arg.start, end = arg.end;
    a = O.plus(center, O.on_circle(R, start));
    b = O.plus(center, O.on_circle(R, end));
    c = O.plus(center, O.on_circle(r, end));
    d = O.plus(center, O.on_circle(r, start));
    large = end - start > Math.PI ? 1 : 0;
    path = (ref = (ref1 = (ref2 = (ref3 = Path()).moveto.apply(ref3, a)).arc.apply(ref2, [
      R,
      R,
      0,
      large,
      1
    ].concat(slice.call(b)))).lineto.apply(ref1, c)).arc.apply(ref, [
      r,
      r,
      0,
      large,
      0
    ].concat(slice.call(d))).closepath();
    mid_angle = (start + end) / 2;
    mid_radius = (r + R) / 2;
    centroid = O.plus(center, O.on_circle(mid_radius, mid_angle));
    return {
      path: path,
      centroid: centroid
    };
  };
}).call(this);


}).call(this)
},{"./ops":5,"./path":6}],11:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Polygon = require('./polygon'),
    O = require('./ops');

module.exports = (function () {
  return function (arg) {
    var angle, center, points, radii;
    center = arg.center, radii = arg.radii;
    angle = 2 * Math.PI / radii.length;
    points = radii.map(function (r, i) {
      return O.plus(center, O.on_circle(r, i * angle));
    });
    return Polygon({
      points: points,
      closed: true
    });
  };
}).call(this);


}).call(this)
},{"./ops":5,"./polygon":8}],12:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Bezier = require('./bezier'),
    O = require('./ops'),
    comp = require('./line-chart-comp');

module.exports = (function () {
  return function (options) {
    var arranged, base, i, lines, ref, scale, xscale, yscale;
    ref = comp(options), arranged = ref.arranged, scale = ref.scale, xscale = ref.xscale, yscale = ref.yscale, base = ref.base;
    i = -1;
    lines = arranged.map(function (arg) {
      var area, line, points, ref1, ref2, scaled_points, xmax, xmin;
      points = arg.points, xmin = arg.xmin, xmax = arg.xmax;
      scaled_points = points.map(scale);
      i += 1;
      line = Bezier({ points: scaled_points });
      area = {
        path: (ref1 = (ref2 = line.path).lineto.apply(ref2, scale([
          xmax,
          base
        ]))).lineto.apply(ref1, scale([
          xmin,
          base
        ])).closepath(),
        centroid: O.average([
          line.centroid,
          scale([
            xmin,
            base
          ]),
          scale([
            xmax,
            base
          ])
        ])
      };
      return O.enhance(options.compute, {
        item: options.data[i],
        line: line,
        area: area,
        index: i
      });
    });
    return {
      curves: lines,
      xscale: xscale,
      yscale: yscale
    };
  };
}).call(this);


}).call(this)
},{"./bezier":1,"./line-chart-comp":3,"./ops":5}],13:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

var Connector = require('./connector'),
    Linear = require('./linear'),
    u = require('./tree_utils');

module.exports = (function () {
  return function (arg) {
    var child_nodes, children, connectors, data, height, hscale, hspace, i, j, levels, max_heights, position, ref, results, root_node, tension, tree, vscales, width;
    data = arg.data, width = arg.width, height = arg.height, children = arg.children, tension = arg.tension;
    if (children == null) {
      children = function (x) {
        return x.children;
      };
    }
    tree = u.build_tree(data, children);
    levels = u.tree_height(tree);
    max_heights = u.set_height(tree);
    hspace = width / (levels - 1);
    hscale = Linear([
      0,
      levels - 1
    ], [
      0,
      width
    ]);
    vscales = function () {
      results = [];
      for (var j = 0, ref = levels - 1; 0 <= ref ? j <= ref : j >= ref; 0 <= ref ? j++ : j--) {
        results.push(j);
      }
      return results;
    }.apply(this).map(function (level) {
      var available_height, bottom, max_height, top;
      available_height = Math.sqrt(level / (levels - 1)) * height;
      top = (height - available_height) / 2;
      bottom = top + available_height;
      max_height = level > 0 ? max_heights[level] + max_heights[level - 1] : max_heights[level];
      if (max_height === 0) {
        return function (x) {
          return height / 2;
        };
      } else {
        return Linear([
          0,
          max_height
        ], [
          top,
          bottom
        ]);
      }
    });
    position = function (node) {
      var level, vscale;
      level = node.level;
      vscale = vscales[level];
      return [
        hscale(level),
        vscale(node.height_)
      ];
    };
    i = -1;
    connectors = u.collect(tree, function (parent, child) {
      i += 1;
      child.height_ = child.height + parent.height;
      return {
        connector: Connector({
          start: position(parent),
          end: position(child),
          tension: tension
        }),
        index: i,
        item: {
          start: parent.item,
          end: child.item
        }
      };
    });
    child_nodes = u.collect(tree, function (parent, child) {
      return {
        point: position(child),
        item: child.item
      };
    });
    root_node = {
      point: position(tree),
      item: tree.item
    };
    return {
      curves: connectors,
      nodes: [root_node].concat(child_nodes)
    };
  };
}).call(this);


}).call(this)
},{"./connector":2,"./linear":4,"./tree_utils":14}],14:[function(require,module,exports){
// Generated by uRequire v0.7.0-beta.15 target: 'dist' template: 'nodejs'
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;


module.exports = (function () {
  var build_tree, collect, max_by, set_height, tree_height;
  max_by = function (items, f) {
    if (items == null) {
      items = [];
    }
    return items.reduce(function (m, i) {
      return Math.max(m, f(i));
    }, 0);
  };
  tree_height = function (root) {
    return 1 + max_by(root.children, tree_height);
  };
  build_tree = function (data, children, level) {
    var cs, result;
    if (level == null) {
      level = 0;
    }
    result = {
      item: data,
      level: level
    };
    cs = children(data);
    if (cs && cs.length) {
      result.children = cs.map(function (c) {
        return build_tree(c, children, level + 1);
      });
    }
    return result;
  };
  set_height = function (root, level, max_heights) {
    var child, j, len, ref;
    if (max_heights == null) {
      max_heights = [];
    }
    if (level == null) {
      level = 0;
    }
    if (max_heights[level] != null) {
      root.height = max_heights[level] + 1;
      max_heights[level] += 1;
    } else {
      max_heights[level] = 0;
      root.height = 0;
    }
    ref = root.children || [];
    for (j = 0, len = ref.length; j < len; j++) {
      child = ref[j];
      set_height(child, level + 1, max_heights);
    }
    return max_heights;
  };
  collect = function (root, f) {
    var child, j, len, ref, result;
    result = [];
    ref = root.children || [];
    for (j = 0, len = ref.length; j < len; j++) {
      child = ref[j];
      result.push(f(root, child));
      result = result.concat(collect(child, f));
    }
    return result;
  };
  return {
    tree_height: tree_height,
    build_tree: build_tree,
    set_height: set_height,
    collect: collect
  };
}).call(this);


}).call(this)
},{}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function interpolate(a, b, t) {
    if (Array.isArray(b)) {
        return b.map(function (x, i) {
            return interpolate(a[i], x, t);
        });
    }
    if (typeof b === 'object') {
        var res = {},
            k;
        for (var k in b) {
            // No need to check hasOwnProperty,
            // we are working with object literals
            res[k] = interpolate(a[k], b[k], t);
        }
        return res;
    }
    if (typeof b === 'number') {
        return a + (b - a) * t;
    }
    return a;
}

function copy(obj) {
    var res = {},
        k;
    for (k in obj) {
        if (obj.hasOwnProperty(k)) {
            res[k] = obj[k];
        }
    }
    return res;
}

var s = 1.70158;

var easingTypes = {
    linear: function linear(t) {
        return t;
    },
    easeInQuad: function easeInQuad(t) {
        return t * t;
    },
    easeOutQuad: function easeOutQuad(t) {
        return -t * (t - 2);
    },
    easeInOutQuad: function easeInOutQuad(t) {
        return t < 1 / 2 ? 2 * t * t : -2 * t * t + 4 * t - 1;
    },
    easeInElastic: function easeInElastic(t) {
        var q = t - 1;
        return -Math.pow(2, 10 * q) * Math.sin((2 * q / 0.3 - 0.5) * Math.PI);
    },
    easeOutElastic: function easeOutElastic(t) {
        return Math.pow(2, -10 * t) * Math.sin((2 * t / 0.3 - 0.5) * Math.PI) + 1;
    },
    easeInOutElastic: function easeInOutElastic(t) {
        var q = 2 * t - 1;
        if (t < 1 / 2) return -0.5 * Math.pow(2, 10 * q) * Math.sin((q / 0.225 - 0.5) * Math.PI);else return Math.pow(2, -10 * q) * Math.sin((q / 0.225 - 0.5) * Math.PI) * 0.5 + 1;
    },
    easeInBack: function easeInBack(t) {
        return t * t * ((s + 1) * t - s);
    },
    easeOutBack: function easeOutBack(t) {
        var q = t - 1;
        return q * q * ((s + 1) * q + s) + 1;
    },
    easeInOutBack: function easeInOutBack(t) {
        var r = s * 1.525;
        if (t < 1 / 2) return 2 * t * t * ((r + 1) * 2 * t - r);else {
            var q = t - 1;
            return 2 * q * q * ((r + 1) * 2 * q + r) + 1;
        }
    },
    easeInBounce: function easeInBounce(t) {
        return 1 - easingTypes.easeOutBounce(1 - t);
    },
    easeOutBounce: function easeOutBounce(t) {
        var q = 2.75 * t;
        var l = 7.5625;
        if (q < 1) {
            return l * t * t;
        } else if (q < 2) {
            var p = t - 1.5 / 2.75;
            return l * p * p + 0.75;
        } else if (q < 2.5) {
            var p = t - 2.25 / 2.75;
            return l * p * p + 0.9375;
        } else {
            var p = t - 2.625 / 2.75;
            return l * p * p + 0.984375;
        }
    },
    easeInOutBounce: function easeInOutBounce(t) {
        return t < 1 / 2 ? easingTypes.easeInBounce(2 * t) / 2 : (easingTypes.easeOutBounce(2 * t - 1) + 1) / 2;
    }
};

/*
 *
 * TERMS OF USE - EASING EQUATIONS
 *
 * Open source under the BSD License.
 *
 * Copyright © 2001 Robert Penner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this list of
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list
 * of conditions and the following disclaimer in the documentation and/or other materials
 * provided with the distribution.
 *
 * Neither the name of the author nor the names of contributors may be used to endorse
 * or promote products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

exports['default'] = {
    easing: easingTypes,
    Mixin: {
        animateState: function animateState(target, options) {
            options = options || {};
            var start = Date.now();
            var initialState = copy(this.state);
            var duration = options.duration || 500;
            var easing = options.easing || easingTypes.easeInOutQuad;
            var self = this;

            function updateState() {
                var t = Math.min(Date.now() - start, duration) / duration;
                self.setState(interpolate(initialState, target, easing(t)));

                if (t < 1) {
                    requestAnimationFrame(updateState);
                } else {
                    if (options.done) options.done();
                }
            }

            requestAnimationFrame(updateState);
        }
    }
};
module.exports = exports['default'];


},{"react":undefined}],16:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _palleteColorsJs = require('../pallete/Colors.js');

var _palleteColorsJs2 = _interopRequireDefault(_palleteColorsJs);

var _animateJs = require('../animate.js');

var _animateJs2 = _interopRequireDefault(_animateJs);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var Pie = require('paths-js/pie');

function cyclic(coll, i) {
    return coll[i % coll.length];
}
function identity(key) {
    return function (x) {
        return x[key];
    };
};
function color(key) {
    return function (x) {
        return x[key];
    };
};

var PieChart = _react2['default'].createClass({
    displayName: 'PieChart',

    mixins: [_animateJs2['default'].Mixin],
    getInitialState: function getInitialState() {
        return { expanded: [0, 0, 0, 0, 0] };
    },

    translate: function translate(p) {
        return 'translate(' + p[0] + ',' + p[1] + ')';
    },

    move: function move(point, perc) {
        return this.translate([point[0] * perc / 3, point[1] * perc / 3]);
    },

    grad: function grad(i) {
        return 'grad-' + i;
    },

    fill: function fill(i) {
        return 'url(#grad-' + i + ')';
    },

    color: function color(i) {
        var pallete = this.props.pallete || _palleteColorsJs2['default'].mix(this.props.color || '#9ac7f7');
        return _palleteColorsJs2['default'].string(cyclic(pallete, i));
    },

    lighten: function lighten(i) {
        var pallete = this.props.pallete || _palleteColorsJs2['default'].mix(this.props.color || '#9ac7f7');
        return _palleteColorsJs2['default'].string(_palleteColorsJs2['default'].lighten(cyclic(pallete, i)));
    },

    expand: function expand(i) {
        var self = this;
        return function () {
            var target = [0, 0, 0, 0, 0];
            target[i] = 1;
            self.animateState({ expanded: target });
        };
    },

    render: function render() {
        var noDataMsg = this.props.noDataMessage || 'No data available';
        if (this.props.data === undefined) return _react2['default'].createElement(
            'span',
            null,
            noDataMsg
        );

        var chart = Pie({
            center: this.props.center || [0, 0],
            r: this.props.r || 60,
            R: this.props.R || 140,
            data: this.props.data,
            accessor: this.props.accessor || identity(this.props.accessorKey)
        });
        var self = this;
        var coefficients = this.state.expanded;
        var slices = chart.curves.map(function (c, i) {
            return _react2['default'].createElement(
                'g',
                { key: i, transform: self.move(c.sector.centroid, coefficients[i]) },
                _react2['default'].createElement(
                    'linearGradient',
                    { id: self.grad(i) },
                    _react2['default'].createElement('stop', { stopColor: self.color(i), offset: '0%' }),
                    _react2['default'].createElement('stop', { stopColor: self.lighten(i), offset: '100%' })
                ),
                _react2['default'].createElement('path', { onClick: self.expand(i), d: c.sector.path.print(), fill: self.fill(i) }),
                _react2['default'].createElement(
                    'text',
                    { textAnchor: 'middle', transform: self.translate(c.sector.centroid) },
                    c.item.name
                )
            );
        });
        var selected = _underscore2['default'].find(this.props.data, function (c, i) {
            return coefficients[i] === 1;
        });

        var legendClassName = 'legend ' + this.props.legendPosition;

        var table = selected ? _react2['default'].createElement(
            'div',
            { className: legendClassName },
            _react2['default'].createElement(
                'h4',
                null,
                selected.name
            ),
            _react2['default'].createElement(
                'p',
                null,
                _react2['default'].createElement(
                    'span',
                    { className: 'label label-info' },
                    selected.population
                )
            )
        ) : null;

        var width = 375;
        var height = 400;
        var style = this.props.style;
        if (style !== undefined) {
            if (style.width !== undefined) width = style.width;
            if (style.height !== undefined) height = style.height;
        }
        return _react2['default'].createElement(
            'div',
            { className: 'pie' },
            _react2['default'].createElement(
                'svg',
                { width: width, height: height },
                _react2['default'].createElement(
                    'g',
                    { transform: 'translate(200, 200)' },
                    slices
                )
            ),
            table
        );
    }
});

exports['default'] = PieChart;
module.exports = exports['default'];


},{"../animate.js":15,"../pallete/Colors.js":22,"paths-js/pie":7,"react":undefined,"underscore":undefined}],17:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Radar = require('paths-js/radar');

function identity(key) {
    return function (x) {
        return x[key];
    };
};
function accessKeys(keys) {
    var a = {};
    for (var i in keys) {
        var key = keys[i];
        a[key] = identity(key);
    }
    return a;
}

var RadarChart = _react2['default'].createClass({
    displayName: 'RadarChart',

    render: function render() {
        var noDataMsg = this.props.noDataMessage || 'No data available';
        if (this.props.data === undefined) return _react2['default'].createElement(
            'span',
            null,
            noDataMsg
        );

        var x = this.props.width / 2;
        var y = this.props.height / 2;
        var radius = Math.min(x, y);

        var center = this.props.center || [x, y];

        var keys = Object.keys(this.props.data[0]);
        var chart = Radar({
            center: this.props.center || [x, y],
            r: this.props.r || radius,
            data: this.props.data,
            accessor: this.props.accessor || accessKeys(keys),
            max: this.props.max
        });
        var self = this;

        var curves = chart.curves.map(function (c, i) {
            return _react2['default'].createElement('path', { key: i, d: c.polygon.path.print(), fill: self.props.fill });
        });

        //var rings = chart.rings.map(function(r, i) {
        //    return (<path key={ i } d={ r.path.print() } stroke={ self.props.stroke } />)
        //});
        var length = chart.rings.length;

        var rings = chart.rings.map(function (r, i) {
            if (i !== length - 1) {
                return _react2['default'].createElement('path', { key: i, d: r.path.print(), stroke: self.props.stroke });
            }
        });
        //
        var labels = chart.rings[length - 1].path.points().map(function (p, i) {
            return _react2['default'].createElement(
                'g',
                null,
                _react2['default'].createElement('line', { x1: p[0], y1: p[1], x2: center[0], y2: center[1], stroke: 'gray' }),
                _react2['default'].createElement(
                    'text',
                    { textAnchor: 'middle', fill: self.props.fill, transform: 'translate(' + Math.floor(p[0]) + ',' + Math.floor(p[1]) + ')' },
                    keys[i]
                )
            );
        });

        var width = this.props.width || 200;
        var height = this.props.height || 200;

        return _react2['default'].createElement(
            'div',
            { className: 'radar' },
            _react2['default'].createElement(
                'svg',
                { width: width, height: height },
                labels,
                _react2['default'].createElement(
                    'g',
                    { fill: 'none', stroke: 'none' },
                    rings,
                    _react2['default'].createElement(
                        'g',
                        { opacity: '0.6' },
                        curves
                    )
                )
            )
        );
    }
});

exports['default'] = RadarChart;
module.exports = exports['default'];


},{"paths-js/radar":9,"react":undefined}],18:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var SmoothLine = require('paths-js/smooth-line');
var Axis = require('../component/Axis');

var Path = require('paths-js/path');

var SmoothLineChart = (function (_React$Component) {
    function SmoothLineChart(props) {
        _classCallCheck(this, SmoothLineChart);

        _get(Object.getPrototypeOf(SmoothLineChart.prototype), 'constructor', this).call(this, props);
        this.state = { showAreas: true };
    }

    _inherits(SmoothLineChart, _React$Component);

    _createClass(SmoothLineChart, [{
        key: 'render',
        value: function render() {
            var noDataMsg = this.props.noDataMessage || 'No data available';
            if (this.props.data === undefined) return _react2['default'].createElement(
                'span',
                null,
                noDataMsg
            );

            var options = this.props.options || {};
            if (options.axisX === undefined) options.axisX = {};
            if (options.axisY === undefined) options.axisY = {};

            var width = this.props.width || 450;
            var height = this.props.height || 350;

            var palette = this.props.palette || ['#3E90F0', '#7881C2', '#707B82'];
            var accessor = function accessor(key) {
                return function (x) {
                    return x[key];
                };
            };
            var chart = SmoothLine({
                data: this.props.data,
                xaccessor: accessor(this.props.xKey),
                yaccessor: accessor(this.props.yKey),
                width: width,
                height: height,
                closed: false
            });

            //add right + left
            if (options.margin !== undefined) width += (options.margin.right || 0) + (options.margin.left || 0);
            //add top + bottom
            if (options.margin !== undefined) height += (options.margin.top || 0) + (options.margin.bottom || 0);

            var axis = new Axis(chart, options);

            var transparent = { opacity: 0.5 };

            var lines = _underscore2['default'].map(chart.curves, function (c, i) {
                return _react2['default'].createElement('path', { d: c.line.path.print(), stroke: palette[i], fill: 'none' });
            });
            var areas = _underscore2['default'].map(chart.curves, function (c, i) {
                //var transparent = { opacity: 0.5 };
                return _react2['default'].createElement('path', { d: c.area.path.print(), style: transparent, stroke: 'none', fill: palette[i] });
            });

            //var points = _.map(chart.curves[0].item, function (c, i) {
            //    return (
            //    <g key={i} transform={"translate(" + chart.xscale(c.x) + "," +  chart.yscale(c.y) + ")"}>
            //        <circle r="2" cx="0" cy="0" stroke="grey" fill="grey"/>
            //        <text transform="translate(-5, 0)" textAnchor="end">{c}</text>
            //    </g>)
            //});

            var xOrient = chart.options.axisX.orient || 'bottom';

            var xTicks = _underscore2['default'].map(axis.x.ticks, function (c, i) {
                var label = options.axisX.labelComponent !== undefined ? _react2['default'].cloneElement(options.axisX.labelComponent, { value: c }) : c;
                return _react2['default'].createElement(
                    'g',
                    { key: i, transform: 'translate(' + chart.xscale(c) + ',' + axis.y.item.min + ')' },
                    options.axisX.showTicks ? _react2['default'].createElement('circle', { r: '2', cx: '0', cy: '0', stroke: 'grey', fill: 'grey' }) : null,
                    options.axisX.showLabels ? _react2['default'].createElement(
                        'text',
                        { transform: 'translate(-5, 20)', textAnchor: 'start' },
                        label
                    ) : null
                );
            });

            //var yOrient = chart.options.axisY.orient || 'bottom';
            //var xSign = yOrient === "top" || yOrient == "left" ? -1:1;
            //var x = sign * 50;
            //var y = sign * 10
            var yTicks = _underscore2['default'].map(axis.y.ticks, function (c, i) {
                var label = options.axisY.labelComponent !== undefined ? _react2['default'].cloneElement(options.axisY.labelComponent, { value: c }) : c;
                return _react2['default'].createElement(
                    'g',
                    { key: i, transform: 'translate(' + axis.x.item.min + ',' + chart.yscale(c) + ')' },
                    options.axisY.showTicks ? _react2['default'].createElement('circle', { r: '2', cx: '0', cy: '0', stroke: 'grey', fill: 'grey' }) : null,
                    options.axisY.showLabels ? _react2['default'].createElement(
                        'text',
                        { transform: 'translate(-5, 0)', textAnchor: 'end' },
                        label
                    ) : null
                );
            });

            var xGridLines = options.axisX.showLines ? _underscore2['default'].map(axis.x.lines, function (c, i) {
                return _react2['default'].createElement('path', { d: c.print(), style: transparent, stroke: '#3E90F0', fill: 'none' });
            }) : [];
            var yGridLines = options.axisY.showLines ? _underscore2['default'].map(axis.y.lines, function (c, i) {
                return _react2['default'].createElement('path', { d: c.print(), style: transparent, stroke: '#3E90F0', fill: 'none' });
            }) : [];
            //
            //var children = [this.state.showAreas ? areas : null,lines,points,xTicks,yTicks,
            //    //options.axisX.showAxis ? <path d={axis.x.path.print()} style={ transparent } stroke="#3E90F0" fill="none"/> : null,
            //    //options.axisX.showAxis ? <path d={axis.y.path.print()} style={ transparent } stroke="#3E90F0" fill="none"/> : null,
            //    xGridLines,yGridLines];
            //
            //children = _.filter(children,function(item){return item !== null});
            //var obj = _.object(_map(_.range(0, children.length),function(e,i){return "key" + i}),children);
            //var fragment = React.addons.createFragment(obj);

            //margins
            var y = options.margin !== undefined ? options.margin.top || 0 : 0;
            var x = options.margin !== undefined ? options.margin.left || 0 : 0;

            return _react2['default'].createElement(
                'svg',
                { ref: 'vivus', width: width, height: height },
                _react2['default'].createElement(
                    'g',
                    { transform: 'translate(' + x + ',' + y + ')' },
                    this.state.showAreas ? areas : null,
                    lines,
                    options.axisX.showAxis ? _react2['default'].createElement('path', { d: axis.x.path.print(), style: transparent, stroke: '#3E90F0', strokeWidth: 3, fill: 'none' }) : null,
                    options.axisY.showAxis ? _react2['default'].createElement('path', { d: axis.y.path.print(), style: transparent, stroke: '#3E90F0', strokeWidth: 3, fill: 'none' }) : null,
                    xTicks,
                    yTicks,
                    xGridLines,
                    yGridLines
                )
            );
        }
    }]);

    return SmoothLineChart;
})(_react2['default'].Component);

exports['default'] = SmoothLineChart;
module.exports = exports['default'];


},{"../component/Axis":21,"paths-js/path":6,"paths-js/smooth-line":12,"react":undefined,"underscore":undefined}],19:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _vivus = require('vivus');

var _vivus2 = _interopRequireDefault(_vivus);

var _SmoothLineJs = require('./SmoothLine.js');

var _SmoothLineJs2 = _interopRequireDefault(_SmoothLineJs);

var SmoothLine = require('paths-js/smooth-line');

var SmoothLineVivusChart = (function (_SmoothLineChart) {
    function SmoothLineVivusChart(props) {
        _classCallCheck(this, SmoothLineVivusChart);

        _get(Object.getPrototypeOf(SmoothLineVivusChart.prototype), 'constructor', this).call(this, props);
        this.state = { showAreas: false };
    }

    _inherits(SmoothLineVivusChart, _SmoothLineChart);

    _createClass(SmoothLineVivusChart, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            new _vivus2['default'](this.refs.vivus.getDOMNode(), {
                type: 'delayed',
                duration: 200,
                start: 'autostart',
                selfDestroy: true
            }, this.addAreas.bind(this));
        }
    }, {
        key: 'addAreas',
        value: function addAreas() {
            this.setState({ showAreas: true });
        }
    }]);

    return SmoothLineVivusChart;
})(_SmoothLineJs2['default']);

exports['default'] = SmoothLineVivusChart;
module.exports = exports['default'];


},{"./SmoothLine.js":18,"paths-js/smooth-line":12,"react":undefined,"underscore":undefined,"vivus":undefined}],20:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var TreeEx = require('paths-js/tree');

function children(x) {
    if (x.collapsed) {
        return [];
    } else {
        return x.children || [];
    }
}

var Tree = (function (_React$Component) {
    function Tree() {
        _classCallCheck(this, Tree);

        if (_React$Component != null) {
            _React$Component.apply(this, arguments);
        }
    }

    _inherits(Tree, _React$Component);

    _createClass(Tree, [{
        key: 'render',
        value: function render() {
            var noDataMsg = this.props.noDataMessage || 'No data available';
            if (this.props.data === undefined) return _react2['default'].createElement(
                'span',
                null,
                noDataMsg
            );

            var that = this;

            var tree = TreeEx({
                data: this.props.data,
                children: children,
                width: 350,
                height: 300
            });

            var curves = _underscore2['default'].map(tree.curves, function (c) {
                return _react2['default'].createElement('path', { d: c.connector.path.print(), fill: 'none', stroke: 'gray' });
            });

            var nodes = _underscore2['default'].map(tree.nodes, function (n) {
                var position = 'translate(' + n.point[0] + ',' + n.point[1] + ')';

                function toggle() {
                    n.item.collapsed = !n.item.collapsed;
                    that.forceUpdate();
                };

                if (children(n.item).length > 0) {
                    var text = _react2['default'].createElement(
                        'text',
                        { transform: 'translate(-10,0)', textAnchor: 'end' },
                        n.item.name
                    );
                } else {
                    var text = _react2['default'].createElement(
                        'text',
                        { transform: 'translate(10,0)', textAnchor: 'start' },
                        n.item.name
                    );
                }

                return _react2['default'].createElement(
                    'g',
                    { transform: position },
                    _react2['default'].createElement('circle', { fill: 'white', stroke: 'black', r: '5', cx: '0', cy: '0', onClick: toggle }),
                    text
                );
            });

            return _react2['default'].createElement(
                'div',
                { id: 'tree' },
                _react2['default'].createElement(
                    'svg',
                    { width: '500', height: '380' },
                    _react2['default'].createElement(
                        'g',
                        { transform: 'translate(80, 10)' },
                        curves,
                        nodes
                    )
                )
            );
        }
    }]);

    return Tree;
})(_react2['default'].Component);

exports['default'] = Tree;
module.exports = exports['default'];


},{"paths-js/tree":13,"react":undefined,"underscore":undefined}],21:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var Path = require('paths-js/path');

var Axis = (function () {
    function Axis(chart, options) {
        _classCallCheck(this, Axis);

        chart.options = options;

        var axis = this.getAxis(chart);
        this.x = axis.x;
        this.y = axis.y;
    }

    _createClass(Axis, [{
        key: 'getAxis',
        value: function getAxis(chart) {

            var xAxis = Axis.getMaxAndMin(chart, 'x');
            var yAxis = Axis.getMaxAndMin(chart, 'y');

            var xTickInterval = chart.options.axisX.tickCount || 10;
            var yTickInterval = chart.options.axisY.tickCount || 10;

            var xTicks = chart.options.axisX.tickValues !== undefined ? _underscore2['default'].map(chart.options.axisX.tickValues, function (v) {
                return v.value;
            }) : Axis.getTickValues(xAxis, xTickInterval);
            var yTicks = chart.options.axisY.tickValues !== undefined ? _underscore2['default'].map(chart.options.axisY.tickValues, function (v) {
                return v.value;
            }) : Axis.getTickValues(yAxis, yTickInterval);

            var fixedX = chart.options.axisY.zeroAxis ? chart.xscale(0) : xAxis.min;
            var fixedY = chart.options.axisX.zeroAxis ? chart.yscale(0) : yAxis.min;

            var xStart = { x: xAxis.min, y: fixedY };
            var yStart = { x: fixedX, y: yAxis.min };
            var xEnd = { x: xAxis.max, y: fixedY };
            var yEnd = { x: fixedX, y: yAxis.max };

            var margin = chart.options.margin;
            if (margin !== undefined) {
                yEnd.y -= margin.top || 0;
                xEnd.x += margin.right || 0;
                yStart.y += margin.bottom || 0;
                xStart.x -= margin.left || 0;
            }

            return {
                x: {
                    item: xAxis,
                    path: Path().moveto(xStart).lineto(xEnd).closepath(),
                    ticks: xTicks,
                    lines: _underscore2['default'].map(xTicks, function (c) {
                        var lineStart = { x: chart.xscale(c), y: yAxis.min };
                        return Path().moveto(lineStart).lineto(lineStart.x, yAxis.max);
                    })
                },
                y: {
                    item: yAxis,
                    path: Path().moveto(yStart).lineto(yEnd).closepath(),
                    ticks: yTicks,
                    lines: _underscore2['default'].map(yTicks, function (c) {
                        var lineStart = { x: xAxis.min, y: chart.yscale(c) };
                        return Path().moveto(lineStart).lineto(xAxis.max, lineStart.y);
                    })
                }
            };
        }
    }], [{
        key: 'getMaxAndMin',
        value: function getMaxAndMin(chart, key) {
            var maxValue = 0;
            var minValue = 0;
            _underscore2['default'].each(chart.curves, function (serie) {
                var values = _underscore2['default'].map(serie.item, function (item) {
                    return item[key];
                });

                var max = _underscore2['default'].max(values);
                if (max > maxValue) maxValue = max;
                var min = _underscore2['default'].min(values);
                if (min < minValue) minValue = min;
            });
            return {
                minValue: minValue,
                maxValue: maxValue,
                min: key === 'x' ? chart.xscale(minValue) : chart.yscale(minValue),
                max: key === 'x' ? chart.xscale(maxValue) : chart.yscale(maxValue)
            };
        }
    }, {
        key: 'getTickValues',

        //static calcStepSize(range, targetSteps)
        //{
        //    // calculate an initial guess at step size
        //    var tempStep = range / targetSteps;
        //
        //    // get the magnitude of the step size
        //    var mag = Math.floor(Math.log(tempStep) /  Math.log(10));
        //    var magPow = Math.pow(10, mag);
        //
        //    // calculate most significant digit of the new step size
        //    var magMsd = Math.round(tempStep / magPow + 0.5);
        //
        //    // promote the MSD to either 1, 2, or 5
        //    if (magMsd > 5.0)
        //        magMsd = 10.0;
        //    else if (magMsd > 2.0)
        //        magMsd = 5.0;
        //    else if (magMsd > 1.0)
        //        magMsd = 2.0;
        //
        //    return magMsd * magPow;
        //}

        value: function getTickValues(axis, tickCount) {
            var tickStep = Math.round((axis.maxValue - axis.minValue) / tickCount, 0);
            return _underscore2['default'].range(axis.minValue, axis.maxValue + 1, tickStep);
        }
    }]);

    return Axis;
})();

exports['default'] = Axis;
module.exports = exports['default'];


},{"paths-js/path":6,"underscore":undefined}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Colors = (function () {
    function Colors() {
        _classCallCheck(this, Colors);
    }

    _createClass(Colors, [{
        key: "cut",
        value: function cut(x) {
            return Math.min(255, Math.floor(Math.abs(x)));
        }
    }, {
        key: "multiply",
        value: function multiply(factor) {
            return (function (c) {
                return {
                    r: this.cut(factor * c.r),
                    g: this.cut(factor * c.g),
                    b: this.cut(factor * c.b)
                };
            }).bind(this);
        }
    }, {
        key: "average",
        value: function average(c1, c2) {
            return {
                r: this.cut((c1.r + c2.r) / 2),
                g: this.cut((c1.g + c2.g) / 2),
                b: this.cut((c1.b + c2.b) / 2)
            };
        }
    }, {
        key: "lighten",
        value: function lighten(c) {
            return this.multiply(1.2)(c);
        }
    }, {
        key: "darken",
        value: function darken(c) {
            return this.multiply(0.8)(c);
        }
    }, {
        key: "mix",
        value: function mix(color1) {
            var c1 = this.hexToRgb(color1);
            var c2 = this.multiply(0.5)(c1);
            var c3 = this.average(c1, c2);
            return [this.lighten(c1), c1, this.darken(c1), this.lighten(c3), c3, this.darken(c3), this.lighten(c2), c2, this.darken(c2)];
        }
    }, {
        key: "string",
        value: function string(c) {
            return "rgb(" + Math.floor(c.r) + "," + Math.floor(c.g) + "," + Math.floor(c.b) + ")";
        }
    }, {
        key: "hexToRgb",
        value: function hexToRgb(hex) {
            var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
            return result ? {
                r: parseInt(result[1], 16),
                g: parseInt(result[2], 16),
                b: parseInt(result[3], 16)
            } : null;
        }
    }]);

    return Colors;
})();

;
var colour = new Colors();
exports["default"] = colour;
module.exports = exports["default"];


},{}],"react-pathjs-chart":[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _chartsPieJs = require('./charts/Pie.js');

var _chartsPieJs2 = _interopRequireDefault(_chartsPieJs);

var _chartsTreeJs = require('./charts/Tree.js');

var _chartsTreeJs2 = _interopRequireDefault(_chartsTreeJs);

var _chartsRadarJs = require('./charts/Radar.js');

var _chartsRadarJs2 = _interopRequireDefault(_chartsRadarJs);

var _chartsSmoothLineJs = require('./charts/SmoothLine.js');

var _chartsSmoothLineJs2 = _interopRequireDefault(_chartsSmoothLineJs);

var _chartsSmoothLineVivusJs = require('./charts/SmoothLineVivus.js');

var _chartsSmoothLineVivusJs2 = _interopRequireDefault(_chartsSmoothLineVivusJs);

exports['default'] = { Pie: _chartsPieJs2['default'], Tree: _chartsTreeJs2['default'], SmoothLine: _chartsSmoothLineJs2['default'], SmoothLineVivus: _chartsSmoothLineVivusJs2['default'], Radar: _chartsRadarJs2['default'] };
module.exports = exports['default'];


},{"./charts/Pie.js":16,"./charts/Radar.js":17,"./charts/SmoothLine.js":18,"./charts/SmoothLineVivus.js":19,"./charts/Tree.js":20}]},{},[]);
